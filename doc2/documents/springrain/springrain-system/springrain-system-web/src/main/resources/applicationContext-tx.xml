<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd 


		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="false">

    <!-- 默认的事务管理器 -->
    <!-- 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource"></property>  
	</bean>  
     -->

    <!-- 集成seata的事务管理器 -->
    <!-- seata和spring事务混合使用,spring事务开启.seata事务开启-spring事务提交-seata事务提交.虽然存在提交或者回滚时状态不一致的风险,但是无注解,可以动态开启seata事务.敏感操作建议使用@GlobalTransactional注解 -->
    <bean id="transactionManager" class="org.springrain.frame.dao.SeataDataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>


    <!-- 处理读写分离,需要复写 DataSourceTransactionManager -->
    <!--
    <bean id="transactionManager" class="org.springrain.frame.dao.FrameDataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    -->


    <!-- 基本事务定义,使用transactionManager作事务管理,默认find*方法 没有事务,和动态数据源配合 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 指定哪些方法需要加入事务，可以使用通配符来只加入需要的方法,oracle需要更换isolation -->
            <tx:method name="save*" propagation="REQUIRED" isolation="READ_UNCOMMITTED" timeout="3600"
                       rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" isolation="READ_UNCOMMITTED" timeout="3600"
                       rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" isolation="READ_UNCOMMITTED" timeout="3600"
                       rollback-for="Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <!-- 切面事务操作-->
        <aop:pointcut id="servicePointcut"
                      expression="execution(* ${springrain.basepackagepath}..*Service.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>

</beans>