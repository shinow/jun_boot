<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yiran.member.mapper.MemberTrMemberAccountMapper">
    
    <resultMap type="MemberTrMemberAccount" id="MemberTrMemberAccountResult">
        <result property="id"    column="id"    />
        <result property="memberId"    column="member_id"    />
        <result property="originalRequestNo"    column="original_request_no"    />
        <result property="accountType"    column="account_type"    />
        <result property="accountId"    column="account_id"    />
        <result property="accountAttribute"    column="account_attribute"    />
        <result property="status"    column="status"    />
        <result property="alias"    column="alias"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
        <result property="memo"    column="memo"    />
        <result property="category"    column="category"    />
        <result property="typeId"    column="type_id"    />
    </resultMap>
	
	<sql id="selectMemberTrMemberAccountVo">
        select id, member_id, original_request_no, account_type, account_id, account_attribute, status, alias, create_time, update_time, create_user, update_user, memo, category, type_id from member_tr_member_account
    </sql>
	
    <select id="selectMemberTrMemberAccountList" parameterType="MemberTrMemberAccount" resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="memberId != null  and memberId != '' "> and member_id = #{memberId}</if>
             <if test="originalRequestNo != null  and originalRequestNo != '' "> and original_request_no = #{originalRequestNo}</if>
             <if test="accountType != null "> and account_type = #{accountType}</if>
             <if test="accountId != null  and accountId != '' "> and account_id = #{accountId}</if>
             <if test="accountAttribute != null "> and account_attribute = #{accountAttribute}</if>
             <if test="status != null "> and status = #{status}</if>
             <if test="alias != null  and alias != '' "> and alias = #{alias}</if>
             <if test="createTime != null "> and create_time = #{createTime}</if>
             <if test="updateTime != null "> and update_time = #{updateTime}</if>
             <if test="createUser != null  and createUser != '' "> and create_user = #{createUser}</if>
             <if test="updateUser != null  and updateUser != '' "> and update_user = #{updateUser}</if>
             <if test="memo != null  and memo != '' "> and memo = #{memo}</if>
             <if test="category != null  and category != '' "> and category = #{category}</if>
             <if test="typeId != null  and typeId != '' "> and type_id = #{typeId}</if>
         </where>
    </select>
    
    <select id="selectMemberTrMemberAccountById" parameterType="Integer" resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        where id = #{id}
    </select>
    
    <select id="getAccountById" parameterType="String" resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        where account_id = #{accountId}
    </select>
    
    <select id="getAccountsByMemberId" parameterType="String" resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        where member_id = #{memberId}
    </select>
    
    <select id="queryAllByMemberAndTypeId"  resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        where member_id = #{memberId} AND type_id =#{typeId} AND category = #{category}
    </select>
    
    <select id="getAccountByAccountId"  resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        where account_id = #{accountId}  AND category = #{category}
    </select>
    
    
    <select id="queryByMemberAndTypeIds" resultMap="MemberTrMemberAccountResult">
        <include refid="selectMemberTrMemberAccountVo"/>
        <where>  
        	and member_id = #{memberId}
        	<if test="accountTypes != null and  accountTypes.size > 0 ">
        		and type_id in 
		        <foreach item="item" collection="accountTypes" open="(" separator="," close=")">
		            #{item}
		        </foreach>
        	</if>
        	<if test="code != null "> and category = #{code}</if>
        	and  account_id is not null
        </where>
			order by create_time
    </select>
    
    
        
    <insert id="insertMemberTrMemberAccount" parameterType="MemberTrMemberAccount" useGeneratedKeys="true" keyProperty="id">
        insert into member_tr_member_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="memberId != null  and memberId != ''  ">member_id,</if>
			<if test="originalRequestNo != null  and originalRequestNo != ''  ">original_request_no,</if>
			<if test="accountType != null  ">account_type,</if>
			<if test="accountId != null  and accountId != ''  ">account_id,</if>
			<if test="accountAttribute != null  ">account_attribute,</if>
			<if test="status != null  ">status,</if>
			<if test="alias != null  and alias != ''  ">alias,</if>
			<if test="memo != null  and memo != ''  ">memo,</if>
			<if test="category != null  and category != ''  ">category,</if>
			<if test="typeId != null  and typeId != ''  ">type_id,</if>
			create_time,
			update_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="memberId != null  and memberId != ''  ">#{memberId},</if>
			<if test="originalRequestNo != null  and originalRequestNo != ''  ">#{originalRequestNo},</if>
			<if test="accountType != null  ">#{accountType},</if>
			<if test="accountId != null  and accountId != ''  ">#{accountId},</if>
			<if test="accountAttribute != null  ">#{accountAttribute},</if>
			<if test="status != null  ">#{status},</if>
			<if test="alias != null  and alias != ''  ">#{alias},</if>
			<if test="memo != null  and memo != ''  ">#{memo},</if>
			<if test="category != null  and category != ''  ">#{category},</if>
			<if test="typeId != null  and typeId != ''  ">#{typeId},</if>
			sysdate(),
			sysdate()
         </trim>
    </insert>
	 
    <update id="updateMemberTrMemberAccount" parameterType="MemberTrMemberAccount">
        update member_tr_member_account
        <trim prefix="SET" suffixOverrides=",">
            <if test="memberId != null  and memberId != ''  ">member_id = #{memberId},</if>
            <if test="originalRequestNo != null  and originalRequestNo != ''  ">original_request_no = #{originalRequestNo},</if>
            <if test="accountType != null  ">account_type = #{accountType},</if>
            <if test="accountId != null  and accountId != ''  ">account_id = #{accountId},</if>
            <if test="accountAttribute != null  ">account_attribute = #{accountAttribute},</if>
            <if test="status != null  ">status = #{status},</if>
            <if test="alias != null  and alias != ''  ">alias = #{alias},</if>
            <if test="memo != null  and memo != ''  ">memo = #{memo},</if>
            <if test="category != null  and category != ''  ">category = #{category},</if>
            <if test="typeId != null  and typeId != ''  ">type_id = #{typeId},</if>
            update_time = sysdate()
        </trim>
        where id = #{id}
    </update>
    
    
    <update id="changeDenyAccountStatus" parameterType="MemberTrMemberAccount">
        update member_tr_member_account set
            status = 2,
            update_time = sysdate()
        <where>  
             <if test="memberId != null  and memberId != '' "> and member_id = #{memberId}</if>
             <if test="accountType != null "> and account_type = #{accountType}</if>
             <if test="accountId != null  and accountId != '' "> and account_id = #{accountId}</if>
         </where>
    </update>
    
    <update id="updateAccountId" parameterType="MemberTrMemberAccount">
        update member_tr_member_account set
            account_id = #{accountId},
            alias = #{accountName},
            update_time = sysdate()
        where account_id is null and member_id = #{memberId}
    </update>

	<delete id="deleteMemberTrMemberAccountById" parameterType="Integer">
        delete from member_tr_member_account where id = #{id}
    </delete>
	
    <delete id="deleteMemberTrMemberAccountByIds" parameterType="String">
        delete from member_tr_member_account where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>