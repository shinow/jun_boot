buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("io.spring.gradle:propdeps-plugin:0.0.10.RELEASE")
        classpath("io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE")
    }
}

apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'maven-publish'
apply plugin: 'io.spring.dependency-management'

ext {
    javaVersion = JavaVersion.VERSION_1_8
    springVersion = "4.3.18.RELEASE"
    springBootVersion = "1.5.15.RELEASE"
    jfinalVersion = "3.4"
    jfinalWeixinVersion = "2.1"
    lombokVersion = '1.16.20'
}

repositories {
    mavenLocal()
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    mavenCentral()
}

dependencies {
    compile "com.jfinal:jfinal:${jfinalVersion}"
    compile "com.jfinal:jfinal-weixin:${jfinalWeixinVersion}"
    provided "org.springframework.boot:spring-boot-starter-web"
    optional "org.springframework.boot:spring-boot-configuration-processor"
    provided "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        failOnError false
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

group = GROUPID
version = VERSION

uploadArchives {
    repositories {
        mavenDeployer {
            pom.version = "$project.version"
            pom.artifactId = "$project.name"
            pom.groupId = "$project.group"

            signing {
                sign configurations.archives
            }

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            repository(url: pom.version.endsWith('SNAPSHOT')
                ? 'https://oss.sonatype.org/content/repositories/snapshots/'
                : 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            ) {
                authentication(userName: userName, password: passWord)
            }

            pom.project {
                name 'spring-boot-starter-weixin'
                packaging 'jar'
                description 'A spring boot starter for JFinal weixin.'
                url 'https://gitee.com/596392912/spring-boot-starter-weixin'

                scm {
                    connection 'scm:git@gitee.com:/596392912/spring-boot-starter-weixin.git'
                    developerConnection 'scm:git@gitee.com/596392912/spring-boot-starter-weixin.git'
                    url 'https://gitee.com/596392912/spring-boot-starter-weixin'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        name 'Dreamlu'
                        email 'qq596392912@gmail.com'
                    }
                }
            }

        }
    }
}
