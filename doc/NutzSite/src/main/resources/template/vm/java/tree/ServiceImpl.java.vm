package ${package}.services;

import io.nutz.nutzsite.common.service.BaseServiceImpl;
import org.nutz.dao.Dao;
import org.nutz.ioc.loader.annotation.IocBean;
import ${package}.models.${className};
import ${package}.services.${className}Service;

import org.nutz.dao.Cnd;
import org.nutz.lang.Strings;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * ${tableComment} 服务层实现
 * 
 * @author ${author}
 * @date ${datetime}
 */
@IocBean(args = {"refer:dao"})
public class ${className}ServiceImpl extends BaseServiceImpl<${className}> implements ${className}Service{
	public ${className}ServiceImpl(Dao dao) {
		super(dao);
	}

    /**
     * 对象转 ${tableComment} 树
     *
     * @param list ${tableComment}列表
     * @return
     */
    @Override
    public List<Map<String, Object>> getTrees(List<${className}> list) {
        List<Map<String, Object>> trees = new ArrayList<Map<String, Object>>();
        for (${className} data : list) {
            Map<String, Object> dataMap = new HashMap<String, Object>();
            dataMap.put("id", data.getId());
            dataMap.put("pId", data.getParentId());
            dataMap.put("name", data.getName());
            dataMap.put("title", data.getName());
            dataMap.put("checked", false);
            trees.add(dataMap);
        }
        return trees;
    }

    /**
     * 查询数据树
     * @param parentId
     * @param name
     * @return
     */
    @Override
    public List<Map<String, Object>> selectTree(String parentId, String name) {
        Cnd cnd = Cnd.NEW();
        if (Strings.isNotBlank(name)) {
            //cnd.and("name", "like", "%" + name + "%");
        }
        if (Strings.isNotBlank(parentId)) {
            cnd.and("parent_id", "=", parentId);
        }
        //cnd.and("status", "=", false).and("del_flag", "=", false);
        List<${className}> list = this.query(cnd);
        List<Map<String, Object>> trees = new ArrayList<Map<String, Object>>();
        trees = getTrees(list);
        return trees;
    }

}
