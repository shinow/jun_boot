<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>me.chanjar</groupId>
    <artifactId>spring-test-examples-aggregator</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <groupId>me.chanjar</groupId>
  <artifactId>spring-test-examples-rdbs-docker</artifactId>
  <packaging>jar</packaging>

  <properties>
    <fabric8.dmp.version>0.28.0</fabric8.dmp.version>
    <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
    <maven-failsafe-plugin.version>2.19</maven-failsafe-plugin.version>

    <!-- 跳过所有测试的flag -->
    <skipTests>false</skipTests>
    <!-- 跳过集成测试的flag -->
    <skipITs>${skipTests}</skipITs>
    <!-- 跳过单元测试的flag -->
    <skipUTs>${skipTests}</skipUTs>
  </properties>

  <dependencies>

    <!-- Spring things -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>

    <dependency>
      <groupId>org.flywaydb</groupId>
      <artifactId>flyway-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.12</version>
    </dependency>
    <!-- Test things -->
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!-- Spring Boot 2 和 maven-failsafe-plugin:2.19 存在一些问题需要这个workaround
        详见这个：https://stackoverflow.com/a/42128153/1287790-->
<!--        <configuration>-->
<!--          <classifier>exec</classifier>-->
<!--        </configuration>-->
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skipTests>${skipUTs}</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven-failsafe-plugin.version}</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- 当skipTests的时候, 跳过 -->
          <skipTests>${skipTests}</skipTests>
          <!-- 当skipITs的时候, 跳过 -->
          <skipITs>${skipITs}</skipITs>
          <!-- 我们被测的是一个Spring Boot项目，因此可以通过System Properties把MySQL container的相关信息传递给程序
          详见文档：https://docs.spring.io/spring-boot/docs/1.5.4.RELEASE/reference/html/boot-features-external-config.html
          -->
          <systemPropertyVariables>
            <spring.datasource.url>jdbc:mysql://localhost:${docker-mysql.port}/test</spring.datasource.url>
            <spring.datasource.username>foo</spring.datasource.username>
            <spring.datasource.password>bar</spring.datasource.password>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${fabric8.dmp.version}</version>
        <configuration>
          <!--  当skipITs的时候，跳过 -->
          <skip>${skipITs}</skip>
          <images>
            <image>
              <!-- 使用mysql:8 docker image -->
              <name>mysql:8</name>
              <!-- 定义docker run mysql:8 时的参数 -->
              <run>
                <ports>
                  <!-- host port到container port的映射
                  这里随机选择一个host port，并将值存到property docker-mysql.port里 -->
                  <port>docker-mysql.port:3306</port>
                </ports>
                <!-- 启动时给的环境变量，参阅文档：https://hub.docker.com/_/mysql -->
                <env>
                  <MYSQL_ROOT_PASSWORD>123456</MYSQL_ROOT_PASSWORD>
                  <MYSQL_DATABASE>test</MYSQL_DATABASE>
                  <MYSQL_USER>foo</MYSQL_USER>
                  <MYSQL_PASSWORD>bar</MYSQL_PASSWORD>
                </env>
                <!-- 设置判定container启动成功的的条件及timeout -->
                <wait>
                  <!-- 如果container打出了这行日志，则说明容器启动成功 -->
                  <log>MySQL init process done. Ready for start up.</log>
                  <time>120000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>

        <executions>
          <execution>
            <!-- 在集成测试开始前启动容器 -->
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <!-- 在集成测试结束后停止并删除容器 -->
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

</project>
