layui.define(['jquery','table','layer','form','laydate','common'], function(exports) {
    var $ = layui.jquery,
        layer = layui.layer,
        form = layui.form,
        common = layui.common,
        laydate = layui.laydate,
        table = layui.table;
    var table_${module}_${classname} = null;
    //页面事件列表
    var active = {
        reload: function(){
            //执行重载
            table.reload('table_${module}_${classname}', {
                page: {
                    curr: 1
                }
                ,where: {
                    #foreach($column in $columns)
                        #if($column.searchField)
                            "${column.attrname}": $("[name=${column.attrname}]").val(),
                        #end
                    #end
                    "unknown":0
                }
            });
        },
        remove: function(ids){
            common.ajaxRemove(_config.prefix + "/remove",ids,function(res){
                active['reload'].call(this);
            });
        }
    };
    var _config = null;
    var view = {
        init:function(config){
            _config = config;
            laydate.render({
                elem: '.ss-laydate'
            });
            this.initTable();
            this.initForm();
        },
        initTable:function(){
            table_${module}_${classname} = table.render({
                elem: '#table_${module}_${classname}',
                method: 'POST',
                url: _config.prefix + "/list", //数据接口
                toolbar: '#table_${module}_${classname}_toolbar',
                done: function() {
                    $('#table_${module}_${classname}').next().css('height', 'auto');
                },
                limit: 20,
                height: 680,
                page: true,
                cols: new Array([
                    {
                        type:'checkbox',
                        sort: false,
                        align:'center',
                        width:40,
                        fixed: 'left'
                    },
                    #foreach($column in $columns)
                        #if($column.visible)
                            {
                                field: '${column.attrname}',
                                sort: ${column.sortable},
                                width:${column.width},
                                align:'center',
                                title: '${column.columnComment}'
                            },
                        #end
                    #end
                    {
                        title: '操作',
                        align: 'center',
                        toolbar:'#col_operation'
                    }])
            });
            //表格工具栏按钮事件
            table.on('toolbar(table_${module}_${classname})', function(obj){
                switch(obj.event){
                    case 'toolbar-${module}-remove':
                        var checks = table.checkStatus('table_${module}_${classname}');
                        var ids = common.joinArray(checks.data,"${primaryKey.attrname}");
                        active['remove'].call(this,ids);
                        break;
                    case 'toolbar-${module}-add':
                        layer.open({
                            type: 2,
                            title: '新增',
                            shade: false,
                            fixed: false,
                            maxmin: true,
                            area: ['600px', '450px'],
                            content: _config.prefix + '/add',
                            btn:["创建","取消"],
                            yes:function(index,layero){
                                layui.config({
                                    base: ctx + 'js/admin/${module}/'
                                }).use('${classname}_add',function(){
                                    layui.${classname}_add.submit({
                                        "index":index,
                                        "layero":layero
                                    });
                                });
                            }
                        });
                        break;
                    case 'toolbar_del':

                        break;
                }
            });
            //表格事件
            table.on('tool(table_${module}_${classname})', function(obj){
                switch(obj.event){
                    case 'del':
                        active['remove'].call(this,obj.data.${primaryKey.attrname});
                        break;
                    case 'edit':
                        layer.open({
                            type: 2,
                            title: '编辑',
                            shade: false,
                            fixed: false,
                            maxmin: true,
                            area: ['800px', '600px'],
                            content: _config.prefix + '/edit/'+obj.data.${primaryKey.attrname},
                            btn:["保存","取消"],
                            yes:function(index,layero){
                                layui.config({
                                    base: ctx + 'js/admin/${module}/'
                                }).use('${classname}_add',function(){
                                    layui.${classname}_add.submit({
                                        "index":index,
                                        "layero":layero
                                    });
                                });
                            }
                        });
                        break;
                }
            });
        },
        initForm:function(){
            $('#${classname}-search-form .layui-btn').on('click', function(){
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
                return false;
            });
        },
        removeItems:function(){
            active['remove'].call(this);
        },
        refreshTable:function(){
            active['reload'].call(this);
        }
    };
    exports('${classname}',view);
});